apiVersion: batch/v1
kind: Job
metadata:
  name: brats-seg
spec:
  template:
    spec:
      containers:
        - name: brats-processing
          image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
          env:
            - name: REPO_PATH
              value: /app/BraTS-CycleGAN-SwinUNETR
          command:
            - "bash"
            - "-c"
          args:
            - |
              echo "Running as user: $(whoami), UID: $(id -u), GID: $(id -g)"

              echo "Available disk space on /data:"
              df -h /data
              echo "Available disk space on /app:"
              df -h /app

              mkdir -p /app/output
              mkdir -p /app/results

              git clone https://gitlab.nrp-nautilus.io/timothy.sereda/BraTS-CycleGAN-SwinUNETR ${REPO_PATH}
              cd ${REPO_PATH}
              
              python -m pip install --upgrade pip
              # python -m pip install torch torchvision torchaudio
              python -m pip install nibabel matplotlib tqdm tensorboard typing-extensions==4.5.0
              
              mkdir -p /app/extracted_data
              echo "Extracting data to /app/extracted_data..."
              cd /data
              tar -xzf brats128_processed_20250502_040703.tar.gz -C /app/extracted_data
              ls -la /app/extracted_data

              echo "Running training with data path: /app/extracted_data/brats128_split"
              
              python ${REPO_PATH}/segmentation/train.py \
                --num_workers=4 \
                --batch_size=16 \
                --epochs=300 \
                --data_path /app/extracted_data/brats128_split \
                --output_dir /app/output \
                --use_mixed_precision=False
              
              TIMESTAMP=$(date +%Y%m%d_%H%M%S)
              RESULTS_DIR="/app/results_${TIMESTAMP}"
              mkdir -p ${RESULTS_DIR}
              cp -r ${REPO_PATH}/segmentation/runs ${RESULTS_DIR}/runs 2>/dev/null || echo "No runs directory"
              cp -r ${REPO_PATH}/segmentation/models ${RESULTS_DIR}/models 2>/dev/null || echo "No models directory"
              cp -r /app/output/* ${RESULTS_DIR}/ 2>/dev/null || echo "No output files"
              echo "Training completed at $(date)" > ${RESULTS_DIR}/summary.txt
              echo "Training parameters: workers=4, batch_size=16, epochs=300" >> ${RESULTS_DIR}/summary.txt
              
              cp -r ${RESULTS_DIR} /data/ 2>/dev/null || echo "Could not copy results to /data"
              tar -czf /data/${TIMESTAMP}_results.tar.gz -C /app $(basename ${RESULTS_DIR}) 2>/dev/null || echo "Could not create tar archive"
          volumeMounts:
            - name: git-repo
              mountPath: /app
            - name: brats-data-volume
              mountPath: /data
            - name: dshm
              mountPath: /dev/shm
          resources:
            limits:
              memory: 30Gi
              cpu: "24"
              nvidia.com/a100: "1"
            requests:
              memory: 25Gi
              cpu: "20"
              nvidia.com/a100: "1"
      volumes:
        - name: git-repo
          emptyDir: {}
        - name: brats-data-volume
          persistentVolumeClaim:
            claimName: brats-data-many
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
      restartPolicy: Never
  backoffLimit: 1