apiVersion: batch/v1
kind: Job
metadata:
  name: brats-seg
spec:
  template:
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
      containers:
      - name: brats-processing
        image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
        env:
        - name: REPO_PATH
          value: /app/BraTS-CycleGAN-SwinUNETR
        command:
        - "bash"
        - "-c"
        args:
        - |
          echo "Running as user: $(whoami), UID: $(id -u), GID: $(id -g)"
          
          # Clone the repository
          git clone https://gitlab.nrp-nautilus.io/timothy.sereda/BraTS-CycleGAN-SwinUNETR ${REPO_PATH}
          cd ${REPO_PATH}
          
          # Setup Python environment
          python -m pip install --upgrade pip
          python -m pip install nibabel matplotlib tqdm tensorboard

          # Extract dataset
          cd /data
          sudo mkdir -p extracted_data
          echo "Extracting data..."
          sudo tar -xzf brats128_processed_20250502_013316.tar.gz -C extracted_data
          ls -la extracted_data
          
          # Run training script
          python ${REPO_PATH}/segmentation/train.py \
            --num_workers=4 \
            --batch_size=16 \
            --epochs=300 \
            --data_path /data/extracted_data \
            --output_dir /data/output
          
          # Save results
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          RESULTS_DIR="/data/results_${TIMESTAMP}"
          mkdir -p ${RESULTS_DIR}
          
          cp -r ${REPO_PATH}/segmentation/runs ${RESULTS_DIR}/runs || echo "No runs directory"
          cp -r ${REPO_PATH}/segmentation/models ${RESULTS_DIR}/models || echo "No models directory"
          
          echo "Training completed at $(date)" > ${RESULTS_DIR}/summary.txt
          echo "Training parameters: workers=4, batch_size=16, epochs=300" >> ${RESULTS_DIR}/summary.txt
          
          tar -czf ${RESULTS_DIR}.tar.gz ${RESULTS_DIR}
        volumeMounts:
        - name: git-repo
          mountPath: /app
        - name: brats-data-volume
          mountPath: /data
        - name: dshm
          mountPath: /dev/shm
        resources:
          limits:
            memory: 30Gi
            cpu: "24"
            nvidia.com/a100: "1"
          requests:
            memory: 25Gi
            cpu: "20"
            nvidia.com/a100: "1"
      volumes:
      - name: git-repo
        emptyDir: {}
      - name: brats-data-volume
        persistentVolumeClaim:
          claimName: brats-data-many
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 8Gi
      restartPolicy: Never
  backoffLimit: 1