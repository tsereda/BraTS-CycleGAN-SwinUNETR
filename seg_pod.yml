apiVersion: v1
kind: Pod
metadata:
  name: brats-seg
spec:
  containers:
    - name: brats-processing
      image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
      env:
        - name: REPO_PATH
          value: /app/BraTS-CycleGAN-SwinUNETR
      command:
        - "bash"
        - "-c"
      args:
        - |
          echo "Running as user: $(whoami), UID: $(id -u), GID: $(id -g)"

          echo "Available disk space on /data:"
          df -h /data
          echo "Available disk space on /app:"
          df -h /app


          git clone https://github.com/tsereda/BraTS-CycleGAN-SwinUNETR ${REPO_PATH}
          cd ${REPO_PATH}
          mkdir -p extracted_data
          mkdir -p output

          tar -xzf /data/brats128_processed_20250511_143910.tar.gz -C extracted_data

          du -sh extracted_data/*

          python -m pip install --upgrade pip
          # python -m pip install torch torchvision torchaudio
          python -m pip install nibabel matplotlib tqdm tensorboard typing-extensions==4.5.0

          echo "Running training with data path: extracted_data/brats128_split"
          python segmentation/train.py \
            --num_workers=4 \
            --batch_size=4 \
            --epochs=300 \
            --data_path=extracted_data/brats128_split

          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          RESULTS_DIR="results_${TIMESTAMP}"

          mkdir -p ${RESULTS_DIR}
          cp -r ${REPO_PATH}/segmentation/runs ${RESULTS_DIR}/runs 2>/dev/null || echo "No runs directory"
          cp -r ${REPO_PATH}/segmentation/models ${RESULTS_DIR}/models 2>/dev/null || echo "No models directory"
          cp -r /app/output/* ${RESULTS_DIR}/ 2>/dev/null || echo "No output files"
          echo "Training completed at $(date)" > ${RESULTS_DIR}/summary.txt

          cp -r ${RESULTS_DIR} /data/
          tar -czf /data/${TIMESTAMP}_results.tar.gz -C /app $(basename ${RESULTS_DIR}) 2>/dev/null || echo "Could not create tar archive"
          
          sleep infinity
      volumeMounts:
        - name: git-repo
          mountPath: /app
        - name: brats-data-volume
          mountPath: /data
        - name: dshm
          mountPath: /dev/shm
      resources:
        limits:
          memory: 24Gi
          cpu: "12"
          nvidia.com/gpu: "1"
        requests:
          memory: 20Gi
          cpu: "10"
          nvidia.com/gpu: "1"
  volumes:
    - name: git-repo
      emptyDir: {}
    - name: brats-data-volume
      persistentVolumeClaim:
        claimName: brats-data
    - name: dshm
      emptyDir:
        medium: Memory
        sizeLimit: 8Gi
  restartPolicy: Never