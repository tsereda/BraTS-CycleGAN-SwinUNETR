apiVersion: batch/v1
kind: Job
metadata:
  name: brats-permission-test
spec:
  template:
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
      containers:
      - name: demo
        image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
        command:
        - "bash"
        - "-c"
        args:
        - |
          # Print user info for debugging
          echo "Running as user: $(whoami), UID: $(id -u), GID: $(id -g)"
         
          # Test write permissions
          echo "Testing write permissions to /conda-envs..."
          mkdir -p /conda-envs/test-dir
          touch /conda-envs/test-file.txt
          echo "Hello, world!" > /conda-envs/test-file.txt
         
          if [ -f "/conda-envs/test-file.txt" ]; then
            echo "SUCCESS: Write permissions to /conda-envs confirmed!"
            cat /conda-envs/test-file.txt
          else
            echo "ERROR: Failed to write to /conda-envs"
            exit 1
          fi
         
          # Exit successfully - no need to run the full conda environment creation
          echo "Permission validation complete. Ready to proceed with full job."
          exit 0
        volumeMounts:
        - name: conda-environments
          mountPath: /conda-envs
        resources:
          limits:
            memory: 120Mi
            cpu: "90m"
          requests:
            memory: 100Mi
            cpu: "75m"
      initContainers:
      - name: volume-permissions
        image: busybox
        command:
        - sh
        - -c
        - |
          mkdir -p /conda-envs
          chmod -R 777 /conda-envs
          echo "Permissions set for /conda-envs"
        volumeMounts:
        - name: conda-environments
          mountPath: /conda-envs
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 45Mi
            cpu: "35m"
          requests:
            memory: 40Mi
            cpu: "30m"
      volumes:
      - name: conda-environments
        persistentVolumeClaim:
          claimName: conda-environments
      restartPolicy: Never
  backoffLimit: 1